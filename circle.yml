machine:
  pre:
    - sudo service postgresql stop
    - sudo apt-get purge -y postgresql*
    - sudo apt-get update
    - sudo apt-get install postgresql
    - sudo service postgresql start
    - sudo su - postgres -c "echo \"create user ubuntu with password 'ubuntu';\" | psql"
    - sudo su - postgres -c "echo \"alter user ubuntu with superuser;\" | psql"
    - sudo su - postgres -c "echo \"create database gruff_test;\" | psql"

database:
  override:
    - go get bitbucket.org/liamstask/goose/cmd/goose
    - |
      if [[ $CIRCLE_BRANCH = 'dev' ]]; then
        goose -env development up
      fi
      if [[ $CIRCLE_BRANCH = 'qa' ]]; then
        goose -env qa up
      fi
      if [[ $CIRCLE_BRANCH = 'master' ]]; then
        goose -env production up
      fi

test:
  override:
    - go generate && go build -v && go test ./api ./gruff -v && go vet

deployment:
  master:
    branch: master
    commands:
      - sudo chown -R $(whoami) /usr/local/bin/
      - curl -sf https://up.apex.sh/install | sh
      - npm i -g up
      - up version
      - up upgrade
      - up env add GRUFF_DB "$DATABASE_URL_UP"
      - up deploy
  qa:
    branch: qa
    commands:
      - sudo chown -R $(whoami) /usr/local/bin/
      - curl -sf https://up.apex.sh/install | sh
      - npm i -g up
      - up version
      - up upgrade
      - up env add GRUFF_DB "$DATABASE_URL_UP"
      - up deploy
  dev:
    branch: dev
    commands:
      - sudo chown -R $(whoami) /usr/local/bin/
      - curl -sf https://up.apex.sh/install | sh
      - npm i -g up
      - up version
      - up upgrade
      - up env add GRUFF_DB "$DATABASE_URL_UP"
      - up deploy
